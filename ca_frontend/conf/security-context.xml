<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2014 Tampere University of Technology, Pori Department
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
  http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<http use-expressions="false" auto-config="false">
		<!-- we do not generate CSRF tokens, so disable the protection allow DELETE, POST, PUT -->
		<csrf disabled="true"/>
	    <intercept-url pattern="/**" access="ROLE_ANONYMOUS, ROLE_USER,ROLE_ADMIN, ROLE_BACKEND"/>
		<http-basic />
		<!-- Disable the default filter -->
		<session-management session-fixation-protection="none"/>
		<custom-filter ref="sessionManagementFilter" position="SESSION_MANAGEMENT_FILTER" />
	</http>
	

 	<!-- Authentication -->
 	
	<authentication-manager>
	    <authentication-provider ref="authenticationProvider"/>
	</authentication-manager>
	
	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
	    <beans:property name="passwordEncoder" ref="bcryptEncoder" />
	    <beans:property name="userDetailsService" ref="coreUserDetailsService" />
	</beans:bean>
	
	<beans:bean id="coreUserDetailsService" class="core.tut.pori.users.CoreUserDetailsService"/>	
	
	<beans:bean name="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- Session management -->
	
	<beans:bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
		<beans:constructor-arg index="0" ref="httpSessionSecurityContextRepository"/>
		<beans:constructor-arg index="1" ref="sas"/>
	</beans:bean>
	
	<beans:bean id="httpSessionSecurityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"/>
	
	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
  		<beans:constructor-arg index="0" ref="sessionRegistry" />
  		<beans:property name="maximumSessions" value="1" />
	</beans:bean>
	
	<!-- The session handler, note that this simply exposes the default Spring Security session registry, it does not directly handle any session functionalities -->
	<beans:bean id="sessionHandler" class="core.tut.pori.context.SessionHandler.SessionHandlerPrivate" init-method="initialized" destroy-method="destroyed">
		<beans:constructor-arg index="0" ref="sessionRegistry" />
	</beans:bean>
	
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
</beans:beans>